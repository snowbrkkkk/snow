-- Rayfield-RGB-Patch.lua
-- Carrega Rayfield oficial e injeta theme RGB animado automaticamente

--⇢ Carregar Rayfield original com proteção
local ok, Rayfield = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua"))()
end)

if not ok or not Rayfield then
    warn("[Rayfield RGB Patch] Falha ao carregar Rayfield original.")
    return
end

----------------------------------------------------------------
-- Função auxiliar para gerar cores RGB dinâmicas
----------------------------------------------------------------
local function RainbowColor(speed)
    return Color3.fromHSV((tick() * speed) % 1, 1, 1)
end

----------------------------------------------------------------
-- Patch em ChangeTheme para RGB animado
----------------------------------------------------------------
-- Salva referência do ChangeTheme original
local _origChangeTheme = Rayfield.ChangeTheme or Rayfield.ModifyTheme

-- Sobrescreve ChangeTheme
Rayfield.ChangeTheme = function(self, ...)
    local speed = 0.25
    local rgb = RainbowColor(speed)

    -- tabela de theme RGB
    local theme = {
        Background = rgb,
        Topbar = rgb,
        Shadow = rgb,
        NotificationBackground = rgb,
        NotificationActionsBackground = rgb,
        TabBackground = rgb,
        TabStroke = rgb,
        TabBackgroundSelected = rgb,
        TabTextColor = Color3.new(1,1,1),
        SelectedTabTextColor = Color3.new(1,1,1),
        ElementBackground = rgb,
        ElementBackgroundHover = rgb,
        SecondaryElementBackground = rgb,
        ElementStroke = rgb,
        SecondaryElementStroke = rgb,
        SliderBackground = rgb,
        SliderProgress = rgb,
        SliderStroke = rgb,
        ToggleBackground = rgb,
        ToggleEnabled = rgb,
        ToggleDisabled = Color3.fromRGB(170,170,170),
        ToggleEnabledStroke = rgb,
        ToggleDisabledStroke = Color3.fromRGB(140,140,140),
        ToggleEnabledOuterStroke = rgb,
        ToggleDisabledOuterStroke = Color3.fromRGB(120,120,120),
        DropdownSelected = rgb,
        DropdownUnselected = rgb,
        InputBackground = rgb,
        InputStroke = rgb,
        PlaceholderColor = Color3.fromRGB(200,200,200)
    }

    -- chama o original para manter compatibilidade
    if _origChangeTheme then
        _origChangeTheme(self, theme)
    end
end

----------------------------------------------------------------
-- Loop contínuo para manter o RGB animado mesmo após LoadConfiguration
----------------------------------------------------------------
task.spawn(function()
    while true do
        task.wait(0.05)
        Rayfield:ChangeTheme()
    end
end)

----------------------------------------------------------------
-- Exporta Rayfield patchado
----------------------------------------------------------------
getgenv().Rayfield = Rayfield
return Rayfield
